{
	"info": {
		"_postman_id": "62baf0e0-c2f3-4053-93f5-6dddcb67c18c",
		"name": "Carga de archivos de muestra Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23946020",
		"_collection_link": "https://restless-equinox-740597.postman.co/workspace/CDBS~17e192b3-4c4d-4c88-9273-6b407d415a1d/collection/23946020-62baf0e0-c2f3-4053-93f5-6dddcb67c18c?action=share&source=collection_link&creator=23946020"
	},
	"item": [
		{
			"name": "0. Comprobar carpeta de dummies Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Cargar cookies desde el entorno y configurarlas como un header en la solicitud\r",
							"let cookies = pm.environment.get(\"cookies\"); // Obtener las cookies del entorno\r",
							"if (cookies) {\r",
							"    cookies = JSON.parse(cookies); // Parsear el JSON de las cookies\r",
							"    let cookieHeader = cookies.map(cookie => `${cookie.name}=${cookie.value}`).join('; ');\r",
							"    pm.request.headers.upsert({\r",
							"        key: 'Cookie',\r",
							"        value: cookieHeader\r",
							"    });\r",
							"    console.log(\"Cookies set in Header:\", cookieHeader);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Código HTTP 207\", () => {\r",
							"    pm.response.to.have.status(207);\r",
							"});\r",
							"\r",
							"// La respuesta contiene uno o más archivos\r",
							"pm.test(\"La respuesta contiene uno o más archivos\", function () {   \r",
							"    pm.expect(responseJson).to.be.an(\"array\").and.to.be.not.empty;\r",
							"}); \r",
							"\r",
							"// Obtener el ID del archivo que se busca y almacenarlo en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.test(\"Almacenar los IDs de los archivos muestra en una variable de entorno\", function () {\r",
							"    var fileIds = [];\r",
							"    let folderId = 0;\r",
							"\r",
							"    responseJson.forEach((item) => {\r",
							"        pm.expect(item).to.have.property(\"oc:fileid\");\r",
							"        if (item[\"d:resourcetype\"] != \"collection\") fileIds.push(item[\"oc:fileid\"]);\r",
							"        else folderId = item[\"oc:fileid\"];\r",
							"    });\r",
							"\r",
							"    if (fileIds.length > 1) pm.environment.set(\"DUMMY_FILES_FOLDER_ID\", folderId);\r",
							"    if (fileIds.length > 0) pm.environment.set(\"DUMMY_FILES_IDS\", JSON.stringify(fileIds));\r",
							"    else pm.environment.unset(\"DUMMY_FILES_IDS\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PROPFIND",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{instance}}/remote.php/dav/files/{{USER_ID}}/Archivos%20de%20muestra%20para%20uso%20en%20Postman",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"dav",
						"files",
						"{{USER_ID}}",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman"
					]
				}
			},
			"response": []
		},
		{
			"name": "0. getUserQuota Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url : pm.environment.get(\"instance\") + \"/csrftoken\",\r",
							"    method : \"GET\"\r",
							"}, (error, response) => {\r",
							"    let jsonData = response.json()\r",
							"    pm.environment.set(\"CSRF\", jsonData.token)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código HTTP 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"El tipo de contenido es application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\")\r",
							"})\r",
							"\r",
							"pm.test(\"La respuesta tiene la estructura esperada\", function () {\r",
							"    const responseData = pm.response.json()\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object')\r",
							"    pm.expect(responseData).to.have.property('usage').that.is.a(\"string\")\r",
							"    pm.expect(responseData).to.have.property('total_space').that.is.a(\"string\")\r",
							"    pm.expect(responseData).to.have.property('usage_relative').that.is.a(\"number\")\r",
							"    pm.expect(responseData).to.have.property('quota').that.is.a(\"number\")\r",
							"    pm.expect(responseData).to.have.property('unlimited').that.is.a(\"boolean\")\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "requesttoken",
						"value": "{{CSRF}}"
					}
				],
				"url": {
					"raw": "{{instance}}/ocs/v2.php/apps/amx_payment_profile_page/api/v1/getUserQuota?format=json",
					"host": [
						"{{instance}}"
					],
					"path": [
						"ocs",
						"v2.php",
						"apps",
						"amx_payment_profile_page",
						"api",
						"v1",
						"getUserQuota"
					],
					"query": [
						{
							"key": "format",
							"value": "json"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1. Eliminar carpeta de dummies (si existiera) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 204 (eliminado) o 404 (no existía)\", function() {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204, 404])\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{instance}}/remote.php/dav/files/{{USER_ID}}/Archivos%20de%20muestra%20para%20uso%20en%20Postman",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"dav",
						"files",
						"{{USER_ID}}",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Crear carpeta de dummies Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 201 (creado)\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "MKCOL",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{instance}}/remote.php/dav/files/{{USER_ID}}/Archivos%20de%20muestra%20para%20uso%20en%20Postman",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"dav",
						"files",
						"{{USER_ID}}",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Subir muestra XLSX Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 201 (creado)\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"// Almacenar el nombre de archivo subido en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.environment.set(\"DUMMY_FILE_NAME\", pm.request.url.path.slice(-1))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					},
					{
						"key": "OCS-APIRequest",
						"value": "true",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "Muestra XLSX.xlsx"
					}
				},
				"url": {
					"raw": "{{instance}}/remote.php/webdav/Archivos%20de%20muestra%20para%20uso%20en%20Postman/Ejemplo%20de%20archivo%20XLSX.xlsx?ownerId={{USER_ID}}",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"webdav",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman",
						"Ejemplo%20de%20archivo%20XLSX.xlsx"
					],
					"query": [
						{
							"key": "ownerId",
							"value": "{{USER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Subir muestra PDF Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 201 (creado)\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"// Almacenar el nombre de archivo subido en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.environment.set(\"DUMMY_FILE_NAME\", pm.request.url.path.slice(-1))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "Muestra PDF.pdf"
					}
				},
				"url": {
					"raw": "{{instance}}/remote.php/webdav/Archivos%20de%20muestra%20para%20uso%20en%20Postman/Ejemplo%20de%20archivo%20PDF.pdf?ownerId={{USER_ID}}",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"webdav",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman",
						"Ejemplo%20de%20archivo%20PDF.pdf"
					],
					"query": [
						{
							"key": "ownerId",
							"value": "{{USER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Subir muestra DOCX Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 201 (creado)\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"// Almacenar el nombre de archivo subido en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.environment.set(\"DUMMY_FILE_NAME\", pm.request.url.path.slice(-1))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "Muestra DOCX.docx"
					}
				},
				"url": {
					"raw": "{{instance}}/remote.php/webdav/Archivos%20de%20muestra%20para%20uso%20en%20Postman/Ejemplo%20de%20archivo%20DOCX.docx?ownerId={{USER_ID}}",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"webdav",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman",
						"Ejemplo%20de%20archivo%20DOCX.docx"
					],
					"query": [
						{
							"key": "ownerId",
							"value": "{{USER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Subir muestra PPTX Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 201 (creado)\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"// Almacenar el nombre de archivo subido en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.environment.set(\"DUMMY_FILE_NAME\", pm.request.url.path.slice(-1))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "Muestra PPTX.pptx"
					}
				},
				"url": {
					"raw": "{{instance}}/remote.php/webdav/Archivos%20de%20muestra%20para%20uso%20en%20Postman/Ejemplo%20de%20archivo%20PPTX.pptx?ownerId={{USER_ID}}",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"webdav",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman",
						"Ejemplo%20de%20archivo%20PPTX.pptx"
					],
					"query": [
						{
							"key": "ownerId",
							"value": "{{USER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Subir muestra ODT Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 201 (creado)\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"// Almacenar el nombre de archivo subido en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.environment.set(\"DUMMY_FILE_NAME\", pm.request.url.path.slice(-1))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "Muestra ODT.odt"
					}
				},
				"url": {
					"raw": "{{instance}}/remote.php/webdav/Archivos%20de%20muestra%20para%20uso%20en%20Postman/Ejemplo%20de%20archivo%20ODT.odt?ownerId={{USER_ID}}",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"webdav",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman",
						"Ejemplo%20de%20archivo%20ODT.odt"
					],
					"query": [
						{
							"key": "ownerId",
							"value": "{{USER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Subir muestra TXT Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// El servidor responde con el código HTTP esperado\r",
							"pm.test(\"Código de estado es 201 (creado)\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"// Almacenar el nombre de archivo subido en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.environment.set(\"DUMMY_FILE_NAME\", pm.request.url.path.slice(-1))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "Muestra TXT.txt"
					}
				},
				"url": {
					"raw": "{{instance}}/remote.php/webdav/Archivos%20de%20muestra%20para%20uso%20en%20Postman/Ejemplo%20de%20archivo%20TXT.txt?ownerId={{USER_ID}}",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"webdav",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman",
						"Ejemplo%20de%20archivo%20TXT.txt"
					],
					"query": [
						{
							"key": "ownerId",
							"value": "{{USER_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Localizar archivo subido Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json()\r",
							"\r",
							"pm.test(\"Código HTTP 207\", () => {\r",
							"    pm.response.to.have.status(207)\r",
							"})\r",
							"\r",
							"// La respuesta contiene el archivo que se busca\r",
							"pm.test(\"La respuesta contiene el archivo que se busca\", function () {   \r",
							"    pm.expect(responseJson.response).to.be.an(\"array\").and.to.be.not.empty\r",
							"}); \r",
							"\r",
							"// Obtener el ID del archivo que se busca y almacenarlo en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.test(\"Almacenar el ID del archivos muestra en una variable de entorno\", function () {\r",
							"    const file = responseJson.response[0]\r",
							"\r",
							"    pm.expect(file).to.have.property(\"oc:fileid\")\r",
							"    pm.expect(file[\"d:resourcetype\"]).to.not.equal(\"collection\")\r",
							"\r",
							"    pm.environment.set(\"DUMMY_FILE_NAME\", file[\"href\"].split(\"/\").slice(-1)[0])\r",
							"    pm.environment.set(\"DUMMY_FILE_ID\", file[\"oc:fileid\"])\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PROPFIND",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\"?><d:propfind  xmlns:d=\"DAV:\" xmlns:oc=\"http://owncloud.org/ns\" xmlns:nc=\"http://nextcloud.org/ns\" ><d:prop><d:getlastmodified /><d:getetag /><d:getcontenttype /><d:resourcetype /><oc:fileid /><oc:permissions /><oc:size /><d:getcontentlength /><nc:has-preview /><oc:favorite /><oc:comments-unread /><oc:owner-display-name /><oc:share-types /><d:displayname /><oc:owner-id /><oc:password/><oc:expiration/></d:prop></d:propfind>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "{{instance}}/remote.php/dav/files/{{USER_ID}}/Archivos%20de%20muestra%20para%20uso%20en%20Postman/{{DUMMY_FILE_NAME}}",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"dav",
						"files",
						"{{USER_ID}}",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman",
						"{{DUMMY_FILE_NAME}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Comprobar carpeta de dummies (para shares) Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json()\r",
							"\r",
							"pm.test(\"Código HTTP 207\", () => {\r",
							"    pm.response.to.have.status(207)\r",
							"})\r",
							"\r",
							"// La respuesta contiene uno o más archivos\r",
							"pm.test(\"La respuesta contiene uno o más archivos\", function () {   \r",
							"    pm.expect(responseJson.response).to.be.an(\"array\").and.to.be.not.empty\r",
							"}); \r",
							"\r",
							"// Obtener el ID del archivo que se busca y almacenarlo en una variable de entorno (para su uso en otros flujos y colecciones)\r",
							"pm.test(\"Almacenar los IDs de los archivos muestra en una variable de entorno\", function () {\r",
							"    var fileIds = []\r",
							"\r",
							"\r",
							"    let folderId = 0\r",
							"\r",
							"    responseJson.response.forEach((item) => {\r",
							"        pm.expect(item).to.have.property(\"oc:fileid\")\r",
							"        if (item[\"d:resourcetype\"] != \"collection\") fileIds.push(item[\"oc:fileid\"])\r",
							"        else folderId = item[\"oc:fileid\"]\r",
							"    })\r",
							"\r",
							"    if (fileIds.length > 1) pm.environment.set(\"DUMMY_FILES_FOLDER_ID\", folderId)\r",
							"    if (fileIds.length > 1) pm.environment.set(\"DUMMY_FILES_IDS\", JSON.stringify(fileIds))\r",
							"    else pm.environment.unset(\"DUMMY_FILES_IDS\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PROPFIND",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "requesttoken",
						"value": "{{CSRF}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\"?><d:propfind  xmlns:d=\"DAV:\" xmlns:oc=\"http://owncloud.org/ns\" xmlns:nc=\"http://nextcloud.org/ns\" ><d:prop><d:getlastmodified /><d:getetag /><d:getcontenttype /><d:resourcetype /><oc:fileid /><oc:permissions /><oc:size /><d:getcontentlength /><nc:has-preview /><oc:favorite /><oc:comments-unread /><oc:owner-display-name /><oc:share-types /><d:displayname /><oc:owner-id /><oc:password/><oc:expiration/></d:prop></d:propfind>"
				},
				"url": {
					"raw": "{{instance}}/remote.php/dav/files/{{USER_ID}}/Archivos%20de%20muestra%20para%20uso%20en%20Postman",
					"host": [
						"{{instance}}"
					],
					"path": [
						"remote.php",
						"dav",
						"files",
						"{{USER_ID}}",
						"Archivos%20de%20muestra%20para%20uso%20en%20Postman"
					]
				}
			},
			"response": []
		}
	]
}